@use "../utilities/colors";
@use "../utilities/variables";
@use "../utilities/_mixins/breakpoints";

// Specificity is added this way so that links automatically inherit
// styling without needing to include class names.
// This is important since some CMSs make adding classnames to links
// more difficult
// Anchor tags used in other components with differing stylesmay need
// to override these styling rules by means of increased CSS specificity

.ucla {
  // links on light backgrounds
  a {
    color: colors.$default-state;

    &:hover {
      color: white;
      background-color: colors.$hover-state;
    }

    &:active {
      color: white;
      background-color: colors.$active-state;
    }

    &:focus {
      color: white;
      background-color: colors.$focus-state;
      outline: 0;
    }

    &:not(.page):visited {
      color: colors.$visited-state;
    }
  }

  // links on dark backgrounds
  & .white-link {
    color: colors.$white;

    &:visited {
      color: colors.$white;
    }

    &:focus {
      color: colors.$medium-grey5;
      background-color: colors.$focus-state-dark;
      outline: 0;
    }

    &:hover {
      color: colors.$medium-grey5;
      background: colors.$hover-state-dark;
    }

    &:active {
      color: colors.$medium-grey5;
      background: colors.$active-state-dark;
    }
  }

  // Related Links
  .related-links {
    border-bottom: 1px solid colors.$emergency-bg-light;
    padding-inline-start: 0;

    li {
      position: relative;
      border-top: 1px solid colors.$emergency-bg-light;
      margin: 0;

      // remove comp library's default bullet styling
      &::before {
        content: "";
        margin-left: 0;
        display: block;
      }

      a {
        line-height: 1.5;
        color: colors.$default-state;
        text-decoration: none;
        display: block;
        padding: 12px 80px 12px 16px;
        font-weight: bold;

        &:focus {
          background-color: colors.$white;
          color: colors.$default-state;
          outline: 1px dotted colors.$default-state;
          outline-offset: -3px;
        }

        &:hover,
        &:active {
          color: colors.$white;
        }

        &:hover {
          background-color: colors.$hover-state;
        }

        &:active {
          background-color: colors.$active-state;
        }

        &.related-links--external {
          &::after {
            content: "";
            background: url("/icons/denotive/external-link--defaultblue.svg");
            background-size: contain;
            width: 24px;
            height: 24px;
            display: block;
            position: absolute;
            right: 24px;
            top: calc(50% - 11px);
          }

          &:hover::after {
            background: url("/icons/denotive/external-link--white.svg");
            background-size: contain;
          }
        }

        &.related-links--download {
          &::after {
            content: "";
            background: url("/icons/denotive/download--blue.svg");
            background-size: contain;
            width: 24px;
            height: 24px;
            display: block;
            position: absolute;
            right: 24px;
            top: calc(50% - 11px);
          }

          &:hover::after {
            background: url("/icons/denotive/download--white.svg");
            background-size: contain;
          }
        }
      }
    }
  }

  // Resource Links
  .resource-link {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    padding: 12px 32px;
    border: 2px solid colors.$default-state;
    position: relative;
    margin-bottom: 16px;
    border-radius: 2px;

    & > span {
      width: 100%;

      @media only screen and (min-width: breakpoints.breakpoint-min(md)) {
        width: 50%;
      }
    }

    & > .resource-link__primary {
      font-weight: bold;
    }
    &::after {
      content: "";
      background-image: url("/icons/denotive/external-link--defaultblue.svg");
      background-size: contain;
      background-repeat: no-repeat;
      background-position: 0 -1px;
      width: 24px;
      height: 24px;
      display: block;
      position: absolute;
      padding-right: 24px;
      right: 0;

      @media only screen and (min-width: breakpoints.breakpoint-min(md)) {
        padding-right: 18px;
      }
    }
    &:hover {
      border-color: colors.$hover-state;

      &::after {
        background-image: url("/icons/denotive/external-link--white.svg");
      }
    }
    &:focus {
      border-color: colors.$focus-state;
      outline: 1px solid colors.$focus-state;
      outline-offset: 1px;
    }
    &:active {
      border-color: colors.$active-state;
    }
    @media only screen and (min-width: breakpoints.breakpoint-min(md)) {
      flex-direction: row;
      padding: 18px 24px;
    }

    &.disabled {
      pointer-events: none;
      cursor: default;
      border: 2px solid colors.$disabled-state;

      & > span {
        color: colors.$disabled-state;
      }
      &::after {
        background-image: url("/icons/denotive/external-link--disabledgrey.svg");
      }
    }
  }

  .tag-link {
    font-size: variables.$ucla-font-size-x-small;
    padding: 4px 12px;
    border: 2px solid colors.$default-state;
    color: colors.$default-state;
    border-radius: 50rem;
    text-decoration: none;

    &:focus {
      outline: 1px solid colors.$focus-state;
      outline-offset: 1px;
    }
  }
}
