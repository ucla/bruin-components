# This is a build configuration for PHP.
# Check our guides at https://confluence.atlassian.com/x/e8YWN for more examples.
# Only use spaces to indent your .yml configuration
# -----

# Specify a docker image from Docker Hub as your build environment
# All of your pipelines scripts will be executed within this docker image.
# image: php:7.2-cli

# pipelines:
#   branches:
#     '{master}':
#       - step:
#           name: Fractal Build
#           image: atlassian/default-image:2
#           caches:
#             - node
#           script:
#             - npm install
#             - npm install -g gulp
#             - gulp
#             - gulp production
#             - apt-get update
#             - apt-get install -y zip
#             - zip -r application.zip .
#             - pipe: atlassian/aws-code-deploy:0.2.9
#               variables:
#                 AWS_ACCESS_KEY_ID: 'AKIAX3FU5UAQSFPXDSBO'
#                 AWS_SECRET_ACCESS_KEY: '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'
#                 AWS_DEFAULT_REGION: 'us-west-2'
#                 APPLICATION_NAME: deployment-components
#                 S3_BUCKET: deployment-ucla-components
#                 COMMAND: 'upload'
#                 ZIP_FILE: 'application.zip'
#                 DEPLOYMENT_GROUP: componentsDeploy
#             - pipe: atlassian/aws-code-deploy:0.2.9
#               variables:
#                 AWS_ACCESS_KEY_ID: 'AKIAX3FU5UAQSFPXDSBO'
#                 AWS_SECRET_ACCESS_KEY: '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'
#                 AWS_DEFAULT_REGION: 'us-west-2'
#                 APPLICATION_NAME: deployment-components
#                 DEPLOYMENT_GROUP: componentsDeploy
#                 S3_BUCKET: deployment-ucla-components
#                 COMMAND: 'deploy'
#                 WAIT: 'true'
#                 IGNORE_APPLICATION_STOP_FAILURES: 'true'
#                 FILE_EXISTS_BEHAVIOR: 'OVERWRITE'
#
image: node:latest

pipelines:
  branches:
    feature/CL-6-semantic-versioning-research:
      - step:
          caches:
            - node
          script:
            # Get an oauth access token using the client credentials, parsing out the token with jq.
            - apt-get update && apt-get install -y curl jq
            - >
              export BB_TOKEN=$(curl -s -X POST -u "${CLIENT_ID}:${CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
            # Configure git to use the oauth token. This well happen when setting env variable BB_TOKEN
            - npm install -g gulp
            - npm install gulp
            - rm -rf ./build && gulp production
            - npx semantic-release --debug
