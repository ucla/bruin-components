## Author: Kevin Ma

## Pipeline:
#1) Runs semantic library to get semantic version
#2) Update version # in documentation (download URL) and package.json
#3) Deploys version's build folder in S3 (/build/x.x.x/)
#4) Deploys public folder in S3 (/public/x.x.x/)
#5) Deploys docs styles folder in S3 (/build/x.x.x/docs/)
#6) Deploys icon assets to root of S3

## TODO
#1) Only deploy updated files
#2) Invalidate CDN urls on pipeline success (manually update @ https://console.aws.amazon.com/cloudfront/home?#distribution-settings:EUU3JRBWPI1HQ)
#3) Only invalidate updated files


image: node:latest

pipelines:
  branches:
    main:
      - step:
          name: Web Components Production
          caches:
            - node
          script:
            # Get an oauth access token using the client credentials, parsing out the token with jq (json processor).
            - apt-get update && apt-get install -y curl jq moreutils
            - export BB_TOKEN=$(echo "x-token-auth:")$(curl -s -X POST -u "${CLIENT_ID}:${CLIENT_SECRET}" https://bitbucket.org/site/oauth2/access_token -d grant_type=client_credentials -d scopes="repository" | jq --raw-output '.access_token')
            - npm install -g gulp
            - npm install @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/git @semantic-release/release-notes-generator
            - npx semantic-release
            # set current tag number -- this will be used to deploy to the correct S3 public folder
            - export updateTag=$(git describe --tags --abbrev=0)
            - export updateTag="${updateTag#?}"
            # update version # in package.json
            - jq --arg updateTag $updateTag '.version = $updateTag' package.json|sponge package.json
            # update version # in asset URL documentation page
            - sed -i "s/%!CurrentVersion%!/"$updateTag"/g" src/docs/02-installation/01-download.md
            - gulp production
            # add updated package.json and compiled public assets
            - git add package.json package-lock.json public/*
            - set +e git commit -m "[skip ci] Current tag upgraded to ${updateTag}"
            - git push
            - set -e
            # deploy build to S3
            - pipe: atlassian/aws-s3-deploy:0.4.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_PROD
                S3_BUCKET: webcomponents.ucla.edu/build/${updateTag}
                LOCAL_PATH: ${BITBUCKET_CLONE_DIR}/build
                ACL: 'public-read'
                EXTRA_ARGS: "--delete"
            # deploy public to S3
            - pipe: atlassian/aws-s3-deploy:0.4.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_PROD
                S3_BUCKET: webcomponents.ucla.edu/public/${updateTag}
                LOCAL_PATH: ${BITBUCKET_CLONE_DIR}/public
                ACL: 'public-read'
                EXTRA_ARGS: "--exclude=/public/docs/"
                EXTRA_ARGS: "--delete"
            # deploy public/docs to S3
            - pipe: atlassian/aws-s3-deploy:0.4.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_PROD
                S3_BUCKET: webcomponents.ucla.edu/build/${updateTag}/docs
                LOCAL_PATH: ${BITBUCKET_CLONE_DIR}/build/docs
                ACL: 'private'
                EXTRA_ARGS: "--delete"
            # deploy icon images to S3
            - pipe: atlassian/aws-s3-deploy:0.4.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_PROD
                S3_BUCKET: webcomponents.ucla.edu/img
                LOCAL_PATH: ${BITBUCKET_CLONE_DIR}/src/components/img/icons
                EXTRA_ARGS: "--delete"
            - echo "Updates from the branch ==> $BITBUCKET_BRANCH <== has been included in S3 with the tag ==> $updateTag <=="
    development:
      - step:
          name: Web Components Development
          caches:
            - node
          script:
            # Get an oauth access token using the client credentials, parsing out the token with jq (json processor).
            - apt-get update && apt-get install -y curl jq moreutils
            - export BB_TOKEN=$(echo "x-token-auth:")$(curl -s -X POST -u "${CLIENT_ID}:${CLIENT_SECRET}" https://bitbucket.org/site/oauth2/access_token -d grant_type=client_credentials -d scopes="repository" | jq --raw-output '.access_token')
            - npm install -g gulp
            - npm install @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/git @semantic-release/release-notes-generator
            - npx semantic-release
            # set current tag number -- this will be used to deploy to the correct S3 public folder
            - export updateTag=$(git describe --tags --abbrev=0)
            - export updateTag="${updateTag#?}"
            # update version # in asset URL documentation page
            - sed -i "s/%!CurrentVersion%!/"$updateTag"/g" src/docs/02-installation/01-download.md
            - gulp production
            # add updated package.json and compiled public assets
            - git add public/*
            - set +e git commit -m "[skip ci] Current tag upgraded to ${updateTag}"
            - git push
            - set -e
            # deploy build to S3
            - pipe: atlassian/aws-s3-deploy:0.4.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_DEV
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_DEV
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_DEV
                S3_BUCKET: dev-webcomponents.ucla.edu/build/${updateTag}
                LOCAL_PATH: ${BITBUCKET_CLONE_DIR}/build
                ACL: 'public-read'
                EXTRA_ARGS: "--delete"
            # deploy public to S3
            - pipe: atlassian/aws-s3-deploy:0.4.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_DEV
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_DEV
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_DEV
                S3_BUCKET: dev-webcomponents.ucla.edu/public/${updateTag}
                LOCAL_PATH: ${BITBUCKET_CLONE_DIR}/public
                ACL: 'public-read'
                EXTRA_ARGS: "--exclude=/public/docs/"
                EXTRA_ARGS: "--delete"
            # deploy public/docs to S3
            - pipe: atlassian/aws-s3-deploy:0.4.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_DEV
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_DEV
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_DEV
                S3_BUCKET: dev-webcomponents.ucla.edu/build/${updateTag}/docs
                LOCAL_PATH: ${BITBUCKET_CLONE_DIR}/build/docs
                ACL: 'private'
                EXTRA_ARGS: "--delete"
            # deploy icon images to S3
            - pipe: atlassian/aws-s3-deploy:0.4.3
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_DEV
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_DEV
                AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_DEV
                S3_BUCKET: dev-webcomponents.ucla.edu/img
                LOCAL_PATH: ${BITBUCKET_CLONE_DIR}/src/components/img/icons
                EXTRA_ARGS: "--delete"
            - echo "Updates from the branch ==> $BITBUCKET_BRANCH <== has been included in S3 with the tag ==> $updateTag <=="
